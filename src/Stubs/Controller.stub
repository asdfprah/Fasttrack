<?php

namespace App\Http\Controllers;

use App\Models\DummyCode:model;
use App\Http\Requests\StoreDummyCode:modelRequest;
use App\Http\Requests\UpdateDummyCode:modelRequest;
use Spatie\QueryBuilder\QueryBuilder;
use Asdfprah\Fasttrack\Fasttrack;

/**
 * Autogenerated Controller with Fasttrack
 * @see https://spatie.be/docs/laravel-query-builder/v4/introduction
 */

class DummyCode:modelController extends Controller
{
    /**
     * Ignore "any" parameter added by Fasttrack in route file
     *
     * @return void
     */ 
    public function __construct()
    {
        $this->middleware(function ($request, $next) { 
            /* retrieve the value a set to a controller property ... */; 
            $request->route()->forgetParameter('any'); 
            return $next($request);
        });
    }
    
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $query = (new Fasttrack)->getQuery();
        
        return QueryBuilder::for( $query )
            //->allowedFilters([])
            ->allowedIncludes([ 
                DummyCode:includes 
            ])
            ->allowedSorts(['id', 'created_at', 'updated_at'])
            ->get();

    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \App\Http\Requests\StoreDummyCode:modelRequest  $request
     * @return \Illuminate\Http\Response
     */
    public function store(StoreDummyCode:modelRequest $request)
    {
        $model = new DummyCode:model();
        $data = $request->validated();
        foreach( $data as $key => $value){
            $model->$key = $value;
        }
        return $model->save();
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $query = (new Fasttrack)->getQuery();
        
        return QueryBuilder::for( $query )
            ->allowedIncludes([ 
                DummyCode:includes
            ])
            ->first();
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \App\Http\Requests\UpdateDummyCode:modelRequest  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(UpdateDummyCode:modelRequest $request, $id)
    {
        $data = $request->validated();
        $model = DummyCode:model::findOrFail( $id );
        foreach( $data as $key => $value){
            $model->$key = $value;
        }
        return $model->save();
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        return DummyCode:model::destroy( $id );
    }
}